{"version":3,"sources":["reducers/index.js","reducers/projects_reducer.js","reducers/active_project_reducer.js","actions/index.js","containers/project.jsx","containers/project_list.jsx","containers/active_project.js","components/app.jsx","index.js"],"names":["rootReducer","combineReducers","projects","state","action","type","index","name","url","desc","technology","activeProject","payload","selectProject","project","connect","dispatch","bindActionCreators","props","classes","className","onClick","ProjectList","this","map","key","renderList","Component","href","App","ReactDOM","render","store","createStore","reducers","document","querySelector"],"mappings":"uOASeA,EALKC,YAAgB,CAClCC,SCLa,WAAgC,IAAvBC,EAAsB,uDAAd,KAAMC,EAAQ,uCAC5C,OAAOA,EAAOC,MACZ,IAAK,mBACH,OAAOF,EACT,QACE,MAAO,CACL,CAAEG,MAAO,KAAMC,KAAM,YAAaC,IAAK,IAAKC,KAAM,gDAAiDC,WAAY,oCAC/G,CAAEJ,MAAO,KAAMC,KAAM,UAAWC,IAAK,6CAA8CC,KAAM,2BAA4BC,WAAY,qCACjI,CAAEJ,MAAO,KAAMC,KAAM,UAAWC,IAAK,yBAA0BC,KAAM,uCAAwCC,WAAY,wCDF/HC,cENa,WAAgC,IAAvBR,EAAsB,uDAAd,KAAMC,EAAQ,uCAC5C,OAAQA,EAAOC,MACb,IAAK,mBACH,OAAOD,EAAOQ,QAEhB,QACE,OAAOT,M,wCCNE,SAASU,EAAcC,GACpC,MAAO,CACLT,KAAM,mBACNO,QAASE,GC6BEC,mBANf,SAAyBZ,GACvB,MAAO,CACLQ,cAAeR,EAAMQ,kBANzB,SAA4BK,GAC1B,OAAOC,YAAmB,CAAEJ,iBAAiBG,KAShCD,EA1BC,SAACG,GACf,IAAIC,EAAU,gBAKd,OAJID,EAAMJ,UAAYI,EAAMP,gBAC1BQ,GAAW,wBAIX,8BACE,0BACEC,UAAWD,EACXE,QAAS,kBAAMH,EAAML,cAAcK,EAAMJ,WACzCI,EAAMJ,QAAQR,OAJlB,YCREgB,E,qLAEF,OAAOC,KAAKL,MAAMhB,SAASsB,KAAI,SAACV,GAC9B,OACE,kBAAC,EAAD,CAASW,IAAKX,EAAQP,KAAMO,QAASA,S,+BAMzC,OACE,+CACGS,KAAKG,kB,GAZYC,aAwBXZ,mBANf,SAAyBZ,GACvB,MAAO,CACLD,SAAUC,EAAMD,YAILa,CAAyBO,GCDzBP,mBANf,SAAyBZ,GACvB,MAAO,CACLQ,cAAeR,EAAMQ,iBAIVI,EAzBO,SAACG,GACrB,OAAKA,EAAMP,cAQT,yBAAKS,UAAU,kBACb,uBAAGQ,KAAMV,EAAMP,cAAcH,KAC3B,2BAAIU,EAAMP,cAAcJ,OAE1B,2BAAIW,EAAMP,cAAcF,MACxB,uBAAGW,UAAU,cAAcF,EAAMP,cAAcD,aAX/C,yBAAKU,UAAU,sBCQNS,EATH,WACV,OACE,yBAAKT,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,Q,MCANU,IAASC,OACP,kBAAC,IAAD,CAAUC,MAAOC,YAAYC,IAC3B,kBAAC,EAAD,OAEFC,SAASC,cAAc,2B","file":"static/js/main.1ae37232.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\nimport ProjectsReducer from './projects_reducer';\nimport ActiveProjectReducer from './active_project_reducer.js';\n\nconst rootReducer = combineReducers({\n  projects: ProjectsReducer,\n  activeProject: ActiveProjectReducer\n});\n\nexport default rootReducer;\n","export default function(state = null, action) {\n  switch(action.type) {\n    case 'PROJECT_SELECTED':\n      return state;\n    default: {\n      return [\n        { index: '01', name: 'Inkscribe', url: '#', desc: 'Creative microblogging platform - coming soon', technology: 'MongoDB, Express, React, Node.js' },\n        { index: '02', name: 'Plantza', url: 'https://plantza-alan1010010.herokuapp.com/', desc: 'Plant rental marketplace', technology: 'Ruby on Rails, PostgreSQL, Heroku' },\n        { index: '03', name: 'Plantis', url: 'http://www.plantis.co/', desc: 'Social house-plant management system', technology: 'Ruby on Rails, PostgreSQL, Heroku' }\n      ];\n    }\n  }\n}\n","export default function(state = null, action) {\n  switch (action.type) {\n    case 'PROJECT_SELECTED': {\n      return action.payload;\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","export default function selectProject(project) {\n  return {\n    type: 'PROJECT_SELECTED',\n    payload: project\n  };\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport selectProject from '../actions/index';\n\nconst Project = (props) => {\n  let classes = \"project-index\";\n  if (props.project === props.activeProject) {\n    classes += \" active-project-link\"\n  }\n\n  return (\n    <span>\n      <span\n        className={classes}\n        onClick={() => props.selectProject(props.project)}\n      >{props.project.index}</span> &nbsp;\n    </span>\n  );\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({ selectProject }, dispatch);\n}\n\nfunction mapStateToProps(state) {\n  return {\n    activeProject: state.activeProject\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Project);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport Project from '../containers/project';\n\nclass ProjectList extends Component {\n  renderList() {\n    return this.props.projects.map((project) => {\n      return (\n        <Project key={project.name} project={project} />\n      );\n    });\n  }\n\n  render() {\n    return (\n      <div> Projects: &nbsp;\n        {this.renderList()}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    projects: state.projects\n  };\n}\n\nexport default connect(mapStateToProps)(ProjectList);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nconst ActiveProject = (props) => {\n  if (!props.activeProject) {\n    return (\n      <div className=\"active-project\">\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"active-project\">\n      <a href={props.activeProject.url}>\n        <p>{props.activeProject.name}</p>\n      </a>\n      <p>{props.activeProject.desc}</p>\n      <p className=\"technology\">{props.activeProject.technology}</p>\n    </div>\n  );\n};\n\nfunction mapStateToProps(state) {\n  return {\n    activeProject: state.activeProject\n  };\n}\n\nexport default connect(mapStateToProps)(ActiveProject);\n","import React from 'react';\n\nimport ProjectList from '../containers/project_list';\nimport ActiveProject from '../containers/active_project';\n\nconst App = () => {\n  return (\n    <div className=\"app\">\n      <ProjectList />\n      <ActiveProject />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport reducers from './reducers';\n\nimport App from './components/app';\nimport './application.css';\n\nReactDOM.render(\n  <Provider store={createStore(reducers)}>\n    <App />\n  </Provider>,\n  document.querySelector('.project-description')\n);\n"],"sourceRoot":""}